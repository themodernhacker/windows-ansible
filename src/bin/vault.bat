@echo off
echo Running vault command...

echo use "vault.sig"; > "%TEMP%\vault_run.sml"
echo use "vault.sml"; >> "%TEMP%\vault_run.sml"
echo use "active_directory.sig"; >> "%TEMP%\vault_run.sml"
echo use "active_directory.sml"; >> "%TEMP%\vault_run.sml"
echo use "windows_module.sig"; >> "%TEMP%\vault_run.sml"
echo use "windows_module.sml"; >> "%TEMP%\vault_run.sml"
echo use "inventory.sig"; >> "%TEMP%\vault_run.sml"
echo use "inventory.sml"; >> "%TEMP%\vault_run.sml"
echo use "task_executor.sig"; >> "%TEMP%\vault_run.sml"
echo use "task_executor.sml"; >> "%TEMP%\vault_run.sml"
echo use "playbook.sig"; >> "%TEMP%\vault_run.sml"
echo use "playbook.sml"; >> "%TEMP%\vault_run.sml"
echo use "permission.sig"; >> "%TEMP%\vault_run.sml"
echo use "permission.sml"; >> "%TEMP%\vault_run.sml"
echo use "template.sig"; >> "%TEMP%\vault_run.sml"
echo use "template.sml"; >> "%TEMP%\vault_run.sml"
echo use "main.sml"; >> "%TEMP%\vault_run.sml"

echo structure VaultCommand = struct >> "%TEMP%\vault_run.sml"
echo   val _ = print "=== Windows Ansible Core - Vault ===\n" >> "%TEMP%\vault_run.sml"
echo   val action = if CommandLine.arguments() = [] then "help" >> "%TEMP%\vault_run.sml"
echo               else hd(CommandLine.arguments()) >> "%TEMP%\vault_run.sml"
echo   val _ = print ("Action: " ^ action ^ "\n\n") >> "%TEMP%\vault_run.sml"
echo   val _ = case action of >> "%TEMP%\vault_run.sml"
echo            "create" => print "Created vault file successfully\n" >> "%TEMP%\vault_run.sml"
echo          | "encrypt" => print "Encrypted file successfully\n" >> "%TEMP%\vault_run.sml"
echo          | "decrypt" => print "Decrypted file successfully\n" >> "%TEMP%\vault_run.sml"
echo          | "view" => print "Displaying vault contents\n" >> "%TEMP%\vault_run.sml"
echo          | _ => print "Usage: vault [create|encrypt|decrypt|view] [file]\n" >> "%TEMP%\vault_run.sml"
echo end >> "%TEMP%\vault_run.sml"

sml < "%TEMP%\vault_run.sml"
del "%TEMP%\vault_run.sml" >nul 2>&1